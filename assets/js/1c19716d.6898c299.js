"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6885],{3905:function(t,e,r){r.d(e,{Zo:function(){return s},kt:function(){return d}});var n=r(7294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var p=n.createContext({}),c=function(t){var e=n.useContext(p),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},s=function(t){var e=c(t.components);return n.createElement(p.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},h=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,p=t.parentName,s=l(t,["components","mdxType","originalType","parentName"]),h=c(r),d=a,m=h["".concat(p,".").concat(d)]||h[d]||u[d]||i;return r?n.createElement(m,o(o({ref:e},s),{},{components:r})):n.createElement(m,o({ref:e},s))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,o=new Array(i);o[0]=h;var l={};for(var p in e)hasOwnProperty.call(e,p)&&(l[p]=e[p]);l.originalType=t,l.mdxType="string"==typeof t?t:a,o[1]=l;for(var c=2;c<i;c++)o[c]=r[c];return n.createElement.apply(null,o)}return n.createElement.apply(null,r)}h.displayName="MDXCreateElement"},7772:function(t,e,r){r.r(e),r.d(e,{frontMatter:function(){return l},contentTitle:function(){return p},metadata:function(){return c},toc:function(){return s},default:function(){return h}});var n=r(7462),a=r(3366),i=(r(7294),r(3905)),o=["components"],l={title:"Class EnchantDataAttribute",sidebar_label:"EnchantDataAttribute",description:"Attribute for enchant enum to store string data inside"},p="Class EnchantDataAttribute",c={unversionedId:"api/CopperSharp.Utils/EnchantDataAttribute",id:"api/CopperSharp.Utils/EnchantDataAttribute",title:"Class EnchantDataAttribute",description:"Attribute for enchant enum to store string data inside",source:"@site/docs/api/CopperSharp.Utils/EnchantDataAttribute.md",sourceDirName:"api/CopperSharp.Utils",slug:"/api/CopperSharp.Utils/EnchantDataAttribute",permalink:"/docs/api/CopperSharp.Utils/EnchantDataAttribute",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Utils/EnchantDataAttribute.md",tags:[],version:"current",frontMatter:{title:"Class EnchantDataAttribute",sidebar_label:"EnchantDataAttribute",description:"Attribute for enchant enum to store string data inside"},sidebar:"tutorialSidebar",previous:{title:"AnnotationUtils",permalink:"/docs/api/CopperSharp.Utils/AnnotationUtils"},next:{title:"EnumDataAttribute",permalink:"/docs/api/CopperSharp.Utils/EnumDataAttribute"}},s=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"Id",id:"id",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3},{value:"MaxLevel",id:"maxlevel",children:[{value:"View Source",id:"view-source-2",children:[],level:6}],level:3}],level:2}],u={toc:s};function h(t){var e=t.components,r=(0,a.Z)(t,o);return(0,i.kt)("wrapper",(0,n.Z)({},u,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"class-enchantdataattribute"},"Class EnchantDataAttribute"),(0,i.kt)("p",null,"Attribute for enchant enum to store string data inside"),(0,i.kt)("h6",{id:"assembly-coppersharpdll"},(0,i.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,i.kt)("h6",{id:"view-source"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/AnnotationUtils.cs#L29"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public sealed class EnchantDataAttribute : Attribute\n")),(0,i.kt)("h2",{id:"properties"},"Properties"),(0,i.kt)("h3",{id:"id"},"Id"),(0,i.kt)("p",null,"Namespaced id of this enchant"),(0,i.kt)("h6",{id:"view-source-1"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/AnnotationUtils.cs#L46"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public string Id { get; }\n")),(0,i.kt)("h3",{id:"maxlevel"},"MaxLevel"),(0,i.kt)("p",null,"Maximum level of this enchantment"),(0,i.kt)("h6",{id:"view-source-2"},(0,i.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Utils/AnnotationUtils.cs#L51"},"View Source")),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public int MaxLevel { get; }\n")))}h.isMDXComponent=!0}}]);