"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[8465],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var i=r(7294);function a(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,i)}return r}function p(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){a(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,i,a=function(e,t){if(null==e)return{};var r,i,a={},n=Object.keys(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||(a[r]=e[r]);return a}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(i=0;i<n.length;i++)r=n[i],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(a[r]=e[r])}return a}var l=i.createContext({}),o=function(e){var t=i.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):p(p({},t),e)),r},u=function(e){var t=o(e.components);return i.createElement(l.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return i.createElement(i.Fragment,{},t)}},m=i.forwardRef((function(e,t){var r=e.components,a=e.mdxType,n=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),m=o(r),d=a,h=m["".concat(l,".").concat(d)]||m[d]||c[d]||n;return r?i.createElement(h,p(p({ref:t},u),{},{components:r})):i.createElement(h,p({ref:t},u))}));function d(e,t){var r=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var n=r.length,p=new Array(n);p[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,p[1]=s;for(var o=2;o<n;o++)p[o]=r[o];return i.createElement.apply(null,p)}return i.createElement.apply(null,r)}m.displayName="MDXCreateElement"},312:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return l},metadata:function(){return o},toc:function(){return u},default:function(){return m}});var i=r(7462),a=r(3366),n=(r(7294),r(3905)),p=["components"],s={title:"Class RegistryOutputStream<TWrite>",sidebar_label:"RegistryOutputStream<TWrite>",description:"An output stream for registries to write into, usually piped into file"},l="Class RegistryOutputStream&lt;TWrite&gt;",o={unversionedId:"api/CopperSharp.Registry/RegistryOutputStream`TWrite`",id:"api/CopperSharp.Registry/RegistryOutputStream`TWrite`",title:"Class RegistryOutputStream<TWrite>",description:"An output stream for registries to write into, usually piped into file",source:"@site/docs/api/CopperSharp.Registry/RegistryOutputStream`TWrite`.md",sourceDirName:"api/CopperSharp.Registry",slug:"/api/CopperSharp.Registry/RegistryOutputStream`TWrite`",permalink:"/docs/api/CopperSharp.Registry/RegistryOutputStream`TWrite`",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Registry/RegistryOutputStream`TWrite`.md",tags:[],version:"current",frontMatter:{title:"Class RegistryOutputStream<TWrite>",sidebar_label:"RegistryOutputStream<TWrite>",description:"An output stream for registries to write into, usually piped into file"},sidebar:"tutorialSidebar",previous:{title:"Identifier",permalink:"/docs/api/CopperSharp.Registry/Identifier"},next:{title:"Index",permalink:"/docs/api/CopperSharp.Tests/"}},u=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Properties",id:"properties",children:[{value:"Base",id:"base",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Write(TWrite)",id:"writetwrite",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"Dispose()",id:"dispose",children:[{value:"View Source",id:"view-source-3",children:[],level:6}],level:3},{value:"DisposeAsync()",id:"disposeasync",children:[{value:"View Source",id:"view-source-4",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5}],level:3}],level:2},{value:"Implements",id:"implements",children:[],level:2}],c={toc:u};function m(e){var t=e.components,r=(0,a.Z)(e,p);return(0,n.kt)("wrapper",(0,i.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"class-registryoutputstreamtwrite"},"Class RegistryOutputStream","<","TWrite",">"),(0,n.kt)("p",null,"An output stream for registries to write into, usually piped into file"),(0,n.kt)("h6",{id:"assembly-coppersharpdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/RegistryOutputStream.cs#L7"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract class RegistryOutputStream<TWrite> : IDisposable, IAsyncDisposable\n")),(0,n.kt)("h2",{id:"properties"},"Properties"),(0,n.kt)("h3",{id:"base"},"Base"),(0,n.kt)("p",null,"Base stream writer of this stream"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/RegistryOutputStream.cs#L12"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"protected StreamWriter? Base { get; }\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"writetwrite"},"Write(TWrite)"),(0,n.kt)("p",null,"Writes an element to the stream"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/RegistryOutputStream.cs#L34"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public abstract void Write(TWrite write)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<TWrite>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"write")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Element to be written")))),(0,n.kt)("h3",{id:"dispose"},"Dispose()"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/RegistryOutputStream.cs#L38"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public void Dispose()\n")),(0,n.kt)("h3",{id:"disposeasync"},"DisposeAsync()"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/RegistryOutputStream.cs#L45"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public ValueTask DisposeAsync()\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"ValueTask")),(0,n.kt)("h2",{id:"implements"},"Implements"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"IAsyncDisposable"))))}m.isMDXComponent=!0}}]);