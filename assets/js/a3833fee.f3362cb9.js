"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[4209],{3905:function(e,t,r){r.d(t,{Zo:function(){return m},kt:function(){return u}});var a=r(7294);function i(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function n(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function l(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?n(Object(r),!0).forEach((function(t){i(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):n(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,i=function(e,t){if(null==e)return{};var r,a,i={},n=Object.keys(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||(i[r]=e[r]);return i}(e,t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);for(a=0;a<n.length;a++)r=n[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(i[r]=e[r])}return i}var p=a.createContext({}),o=function(e){var t=a.useContext(p),r=t;return e&&(r="function"==typeof e?e(t):l(l({},t),e)),r},m=function(e){var t=o(e.components);return a.createElement(p.Provider,{value:t},e.children)},c={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},h=a.forwardRef((function(e,t){var r=e.components,i=e.mdxType,n=e.originalType,p=e.parentName,m=s(e,["components","mdxType","originalType","parentName"]),h=o(r),u=i,d=h["".concat(p,".").concat(u)]||h[u]||c[u]||n;return r?a.createElement(d,l(l({ref:t},m),{},{components:r})):a.createElement(d,l({ref:t},m))}));function u(e,t){var r=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var n=r.length,l=new Array(n);l[0]=h;var s={};for(var p in t)hasOwnProperty.call(t,p)&&(s[p]=t[p]);s.originalType=e,s.mdxType="string"==typeof e?e:i,l[1]=s;for(var o=2;o<n;o++)l[o]=r[o];return a.createElement.apply(null,l)}return a.createElement.apply(null,r)}h.displayName="MDXCreateElement"},4538:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return s},contentTitle:function(){return p},metadata:function(){return o},toc:function(){return m},default:function(){return h}});var a=r(7462),i=r(3366),n=(r(7294),r(3905)),l=["components"],s={title:"Interface IRegistry<TElement>",sidebar_label:"IRegistry<TElement>",description:"A super-interface for all registries to implement. It also contains all registries as static fields."},p="Interface IRegistry&lt;TElement&gt;",o={unversionedId:"api/CopperSharp.Registry/IRegistry`TElement`",id:"api/CopperSharp.Registry/IRegistry`TElement`",title:"Interface IRegistry<TElement>",description:"A super-interface for all registries to implement. It also contains all registries as static fields.",source:"@site/docs/api/CopperSharp.Registry/IRegistry`TElement`.md",sourceDirName:"api/CopperSharp.Registry",slug:"/api/CopperSharp.Registry/IRegistry`TElement`",permalink:"/docs/api/CopperSharp.Registry/IRegistry`TElement`",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Registry/IRegistry`TElement`.md",tags:[],version:"current",frontMatter:{title:"Interface IRegistry<TElement>",sidebar_label:"IRegistry<TElement>",description:"A super-interface for all registries to implement. It also contains all registries as static fields."},sidebar:"tutorialSidebar",previous:{title:"IRegistrable",permalink:"/docs/api/CopperSharp.Registry/IRegistrable"},next:{title:"Identifier",permalink:"/docs/api/CopperSharp.Registry/Identifier"}},m=[{value:"<strong>Assembly</strong>: CopperSharp.dll",id:"assembly-coppersharpdll",children:[],level:6},{value:"View Source",id:"view-source",children:[],level:6},{value:"Fields",id:"fields",children:[{value:"Functions",id:"functions",children:[{value:"View Source",id:"view-source-1",children:[],level:6}],level:3}],level:2},{value:"Methods",id:"methods",children:[{value:"Register(TElement)",id:"registertelement",children:[{value:"View Source",id:"view-source-2",children:[],level:6},{value:"Parameters",id:"parameters",children:[],level:5}],level:3},{value:"WriteTo(RegistryOutputStream&lt;TElement&gt;)",id:"writetoregistryoutputstreamtelement",children:[{value:"View Source",id:"view-source-3",children:[],level:6},{value:"Parameters",id:"parameters-1",children:[],level:5}],level:3},{value:"Flush()",id:"flush",children:[{value:"View Source",id:"view-source-4",children:[],level:6}],level:3},{value:"Register&lt;TWhat&gt;(IRegistry&lt;TWhat&gt;, TWhat)",id:"registertwhatiregistrytwhat-twhat",children:[{value:"View Source",id:"view-source-5",children:[],level:6},{value:"Returns",id:"returns",children:[],level:5},{value:"Parameters",id:"parameters-2",children:[],level:5},{value:"Type Parameters",id:"type-parameters",children:[],level:5}],level:3},{value:"Flush&lt;TWhat&gt;(IRegistry&lt;TWhat&gt;, RegistryOutputStream&lt;TWhat&gt;)",id:"flushtwhatiregistrytwhat-registryoutputstreamtwhat",children:[{value:"View Source",id:"view-source-6",children:[],level:6},{value:"Parameters",id:"parameters-3",children:[],level:5},{value:"Type Parameters",id:"type-parameters-1",children:[],level:5}],level:3}],level:2}],c={toc:m};function h(e){var t=e.components,r=(0,i.Z)(e,l);return(0,n.kt)("wrapper",(0,a.Z)({},c,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"interface-iregistrytelement"},"Interface IRegistry","<","TElement",">"),(0,n.kt)("p",null,"A super-interface for all registries to implement. It also contains all registries as static fields."),(0,n.kt)("h6",{id:"assembly-coppersharpdll"},(0,n.kt)("strong",{parentName:"h6"},"Assembly"),": CopperSharp.dll"),(0,n.kt)("h6",{id:"view-source"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L10"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public interface IRegistry<TElement>\n    where TElement : IRegistrable\n")),(0,n.kt)("h2",{id:"fields"},"Fields"),(0,n.kt)("h3",{id:"functions"},"Functions"),(0,n.kt)("p",null,"Static instance of functions registry"),(0,n.kt)("h6",{id:"view-source-1"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L32"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"public static IFunctionRegistry Functions\n")),(0,n.kt)("h2",{id:"methods"},"Methods"),(0,n.kt)("h3",{id:"registertelement"},"Register(TElement)"),(0,n.kt)("p",null,"Registers element, allowing to later write it to stream"),(0,n.kt)("h6",{id:"view-source-2"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L16"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void Register(TElement element)\n")),(0,n.kt)("h5",{id:"parameters"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<TElement>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"element")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Element to be registered")))),(0,n.kt)("h3",{id:"writetoregistryoutputstreamtelement"},"WriteTo(RegistryOutputStream","<","TElement",">",")"),(0,n.kt)("p",null,"Writes data inside this registry to provided output stream"),(0,n.kt)("h6",{id:"view-source-3"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L22"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void WriteTo(RegistryOutputStream<TElement> stream)\n")),(0,n.kt)("h5",{id:"parameters-1"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/RegistryOutputStream%60TWrite%60"},"CopperSharp.Registry.RegistryOutputStream","<","TWrite",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"stream")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Stream the contents to be written into")))),(0,n.kt)("h3",{id:"flush"},"Flush()"),(0,n.kt)("p",null,"Clears the contents of this registry"),(0,n.kt)("h6",{id:"view-source-4"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L27"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"void Flush()\n")),(0,n.kt)("h3",{id:"registertwhatiregistrytwhat-twhat"},"Register","<","TWhat",">","(IRegistry","<","TWhat",">",", TWhat)"),(0,n.kt)("p",null,"Registers an element to provided registry and returns it"),(0,n.kt)("h6",{id:"view-source-5"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L41"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"static TWhat Register<TWhat>(IRegistry<TWhat> registry, TWhat element)\n    where TWhat : IRegistrable\n")),(0,n.kt)("h5",{id:"returns"},"Returns"),(0,n.kt)("p",null,(0,n.kt)("inlineCode",{parentName:"p"},"<TWhat>"),": Provided ","<",'code data-dev-comment-type="paramref" class="paramref"',">","element","<","/code",">"),(0,n.kt)("h5",{id:"parameters-2"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/IRegistry%60TElement%60"},"CopperSharp.Registry.IRegistry","<","TElement",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"registry")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Registry for element to be registered into")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"<TWhat>")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"element")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Element to be registered")))),(0,n.kt)("h5",{id:"type-parameters"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TWhat")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Type of registrant")))),(0,n.kt)("h3",{id:"flushtwhatiregistrytwhat-registryoutputstreamtwhat"},"Flush","<","TWhat",">","(IRegistry","<","TWhat",">",", RegistryOutputStream","<","TWhat",">",")"),(0,n.kt)("p",null,"Flushes the contents of provided registry into stream"),(0,n.kt)("h6",{id:"view-source-6"},(0,n.kt)("a",{parentName:"h6",href:"https://github.com/Maxuss/CopperSharp/blob/master/CopperSharp/Registry/IRegistry.cs#L55"},"View Source")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre",className:"language-csharp",metastring:'title="Declaration"',title:'"Declaration"'},"static void Flush<TWhat>(IRegistry<TWhat> registry, RegistryOutputStream<TWhat> stream)\n    where TWhat : IRegistrable\n")),(0,n.kt)("h5",{id:"parameters-3"},"Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Type"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/IRegistry%60TElement%60"},"CopperSharp.Registry.IRegistry","<","TElement",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"registry")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Registry, contents of which to be flushed")),(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("a",{parentName:"td",href:"../CopperSharp.Registry/RegistryOutputStream%60TWrite%60"},"CopperSharp.Registry.RegistryOutputStream","<","TWrite",">")),(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("em",{parentName:"td"},"stream")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Stream to which the contents of registry should be flushed")))),(0,n.kt)("h5",{id:"type-parameters-1"},"Type Parameters"),(0,n.kt)("table",null,(0,n.kt)("thead",{parentName:"table"},(0,n.kt)("tr",{parentName:"thead"},(0,n.kt)("th",{parentName:"tr",align:"left"},"Name"),(0,n.kt)("th",{parentName:"tr",align:"left"},"Description"))),(0,n.kt)("tbody",{parentName:"table"},(0,n.kt)("tr",{parentName:"tbody"},(0,n.kt)("td",{parentName:"tr",align:"left"},(0,n.kt)("inlineCode",{parentName:"td"},"TWhat")),(0,n.kt)("td",{parentName:"tr",align:"left"},"Type of element in registry")))))}h.isMDXComponent=!0}}]);