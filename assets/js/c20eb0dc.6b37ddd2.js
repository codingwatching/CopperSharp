"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[9470],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return d}});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function p(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?p(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):p(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},p=Object.keys(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var p=Object.getOwnPropertySymbols(e);for(a=0;a<p.length;a++)r=p[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var l=a.createContext({}),m=function(e){var t=a.useContext(l),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=m(e.components);return a.createElement(l.Provider,{value:t},e.children)},s={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,p=e.originalType,l=e.parentName,u=i(e,["components","mdxType","originalType","parentName"]),c=m(r),d=n,h=c["".concat(l,".").concat(d)]||c[d]||s[d]||p;return r?a.createElement(h,o(o({ref:t},u),{},{components:r})):a.createElement(h,o({ref:t},u))}));function d(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var p=r.length,o=new Array(p);o[0]=c;var i={};for(var l in t)hasOwnProperty.call(t,l)&&(i[l]=t[l]);i.originalType=e,i.mdxType="string"==typeof e?e:n,o[1]=i;for(var m=2;m<p;m++)o[m]=r[m];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}c.displayName="MDXCreateElement"},78:function(e,t,r){r.r(t),r.d(t,{frontMatter:function(){return i},contentTitle:function(){return l},metadata:function(){return m},toc:function(){return u},default:function(){return c}});var a=r(7462),n=r(3366),p=(r(7294),r(3905)),o=["components"],i={title:"Namespace CopperSharp.Item.Meta",sidebar_label:"Index",sidebar_position:0},l="Namespace CopperSharp.Item.Meta",m={unversionedId:"api/CopperSharp.Item.Meta/CopperSharp.Item.Meta",id:"api/CopperSharp.Item.Meta/CopperSharp.Item.Meta",title:"Namespace CopperSharp.Item.Meta",description:"Classes",source:"@site/docs/api/CopperSharp.Item.Meta/CopperSharp.Item.Meta.md",sourceDirName:"api/CopperSharp.Item.Meta",slug:"/api/CopperSharp.Item.Meta/",permalink:"/docs/api/CopperSharp.Item.Meta/",editUrl:"https://github.com/Maxuss/CopperSharp/docs/api/CopperSharp.Item.Meta/CopperSharp.Item.Meta.md",tags:[],version:"current",sidebarPosition:0,frontMatter:{title:"Namespace CopperSharp.Item.Meta",sidebar_label:"Index",sidebar_position:0},sidebar:"tutorialSidebar",previous:{title:"Material",permalink:"/docs/api/CopperSharp.Item/Material"},next:{title:"BannerMeta",permalink:"/docs/api/CopperSharp.Item.Meta/BannerMeta"}},u=[{value:"Classes",id:"classes",children:[{value:"BannerMeta",id:"bannermeta",children:[],level:3},{value:"DefaultItemMeta",id:"defaultitemmeta",children:[],level:3},{value:"FireworkExplosion",id:"fireworkexplosion",children:[],level:3},{value:"FireworkMeta",id:"fireworkmeta",children:[],level:3},{value:"ItemMeta",id:"itemmeta",children:[],level:3},{value:"PotionMeta",id:"potionmeta",children:[],level:3},{value:"SkullMeta",id:"skullmeta",children:[],level:3}],level:2},{value:"Structs",id:"structs",children:[{value:"BannerPattern",id:"bannerpattern",children:[],level:3},{value:"PatternType",id:"patterntype",children:[],level:3}],level:2},{value:"Enums",id:"enums",children:[{value:"ExplosionType",id:"explosiontype",children:[],level:3},{value:"NumberedColor",id:"numberedcolor",children:[],level:3}],level:2}],s={toc:u};function c(e){var t=e.components,r=(0,n.Z)(e,o);return(0,p.kt)("wrapper",(0,a.Z)({},s,r,{components:t,mdxType:"MDXLayout"}),(0,p.kt)("h1",{id:"namespace-coppersharpitemmeta"},"Namespace CopperSharp.Item.Meta"),(0,p.kt)("h2",{id:"classes"},"Classes"),(0,p.kt)("h3",{id:"bannermeta"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/BannerMeta"},"BannerMeta")),(0,p.kt)("p",null,"Metadata container for banners"),(0,p.kt)("h3",{id:"defaultitemmeta"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/DefaultItemMeta"},"DefaultItemMeta")),(0,p.kt)("p",null,"Default item meta implementation"),(0,p.kt)("h3",{id:"fireworkexplosion"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/FireworkExplosion"},"FireworkExplosion")),(0,p.kt)("p",null,"Represents a firework explosion"),(0,p.kt)("h3",{id:"fireworkmeta"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/FireworkMeta"},"FireworkMeta")),(0,p.kt)("p",null,"Represents metadata of a firework item"),(0,p.kt)("h3",{id:"itemmeta"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/ItemMeta"},"ItemMeta")),(0,p.kt)("p",null,"NBT Tag for items"),(0,p.kt)("h3",{id:"potionmeta"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/PotionMeta"},"PotionMeta")),(0,p.kt)("p",null,"A container for potion metadata"),(0,p.kt)("h3",{id:"skullmeta"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/SkullMeta"},"SkullMeta")),(0,p.kt)("p",null,"Metadata container for player skulls"),(0,p.kt)("h2",{id:"structs"},"Structs"),(0,p.kt)("h3",{id:"bannerpattern"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/BannerPattern"},"BannerPattern")),(0,p.kt)("p",null,"A pattern to store inside a banner"),(0,p.kt)("h3",{id:"patterntype"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/PatternType"},"PatternType")),(0,p.kt)("p",null,"Represents a type of banner pattern"),(0,p.kt)("h2",{id:"enums"},"Enums"),(0,p.kt)("h3",{id:"explosiontype"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/ExplosionType"},"ExplosionType")),(0,p.kt)("p",null,"Represents a firework explosion type"),(0,p.kt)("h3",{id:"numberedcolor"},(0,p.kt)("a",{parentName:"h3",href:"../CopperSharp.Item.Meta/NumberedColor"},"NumberedColor")),(0,p.kt)("p",null,"Represents a numbered color"))}c.isMDXComponent=!0}}]);